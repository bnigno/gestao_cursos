# Generated by Django 4.0.4 on 2022-05-12 00:57

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Aluno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome')),
                ('cpf', models.CharField(max_length=50, null=True, unique=True, verbose_name='CPF')),
            ],
        ),
        migrations.CreateModel(
            name='Curso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome')),
                ('carga_horaria', models.IntegerField(verbose_name='Carga Horária')),
            ],
        ),
        migrations.CreateModel(
            name='DadosPagamentos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chave_pix', models.CharField(max_length=300, null=True, verbose_name='Chave PIX')),
                ('banco', models.CharField(max_length=100, null=True, verbose_name='Nome do banco')),
                ('agencia', models.CharField(max_length=50, null=True, verbose_name='Agência bancária')),
                ('conta', models.CharField(max_length=100, null=True, verbose_name='Número da conta bancária')),
                ('tipo_conta', models.IntegerField(choices=[(1, 'Conta Corrente'), (2, 'Poupança')], null=True, verbose_name='Tipo de conta bancária')),
            ],
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome')),
                ('cpf', models.CharField(max_length=50, null=True, unique=True, verbose_name='CPF')),
                ('dados_pagamento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cursos.dadospagamentos', verbose_name='Dados de pagamento')),
            ],
        ),
        migrations.CreateModel(
            name='TiposPagamentos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
            ],
        ),
        migrations.CreateModel(
            name='Turma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome')),
                ('dt_inicio', models.DateField(verbose_name='Data de inicio')),
                ('dt_fim', models.DateField(verbose_name='Data de encerramento')),
                ('valor_lanche', models.FloatField(verbose_name='Valor do lanche')),
                ('valor_transporte', models.FloatField(verbose_name='Valor do Transporte')),
                ('alunos', models.ManyToManyField(related_name='turmas', to='cursos.aluno')),
                ('curso', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cursos.curso', verbose_name='Curso')),
                ('municipio', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cursos.municipio', verbose_name='Município')),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cursos.professor', verbose_name='Professor')),
            ],
        ),
        migrations.CreateModel(
            name='Frequencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(verbose_name='Data')),
                ('has_aula', models.BooleanField(default=True, verbose_name='Houve aula?')),
                ('turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cursos.turma', verbose_name='Turma')),
            ],
            options={
                'unique_together': {('data', 'turma')},
            },
        ),
        migrations.AddField(
            model_name='dadospagamentos',
            name='tipo_pagamento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cursos.tipospagamentos', verbose_name='Tipo de pagamento'),
        ),
        migrations.AddField(
            model_name='aluno',
            name='dados_pagamento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='cursos.dadospagamentos', verbose_name='Dados de pagamento'),
        ),
        migrations.CreateModel(
            name='FrequenciaAluno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('presente', models.BooleanField(default=True, help_text='O aluno estava presente?')),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frequencias', to='cursos.aluno')),
                ('frequencia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alunos', to='cursos.frequencia')),
            ],
            options={
                'unique_together': {('aluno', 'frequencia')},
            },
        ),
    ]
